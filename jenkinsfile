pipeline {
    agent any  // Runs on any available Jenkins agent

    tools {
        jdk 'JDK17'       // Must match the JDK name you configured in Jenkins
        maven 'Maven3'    // Or 'gradle' if using Gradle
    }

    stages {
        // Stage 1: Fetch Code from GitHub
        stage('Checkout') {
            steps {
                git branch: 'main', 
                    credentialsId: 'your-github-creds-id',  // From Jenkins credentials
                    url: 'https://github.com/your-username/your-repo.git'
            }
        }

        // Stage 2: Build the Project
        stage('Build') {
            steps {
                sh 'mvn clean package'  // For Maven
                // OR for Gradle: sh 'gradle build'
            }
        }

        // Stage 3: Run Tests
        stage('Test') {
            steps {
                sh 'mvn test'  // For Maven
                // OR for Gradle: sh 'gradle test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'  // Maven test reports
                    // OR for Gradle: junit '**/build/test-results/test/*.xml'
                }
            }
        }

        // Stage 4: Deploy (Example: Copy JAR to a server)
        stage('Deploy') {
            steps {
                sh 'cp target/*.jar /var/www/myapp.jar'  // Example deployment
                sh 'systemctl restart myapp-service'      // Restart service if needed
            }
        }
    }

    // Optional: Notifications
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
